server:
  port: 2323
  shutdown: graceful
  undertow:
    max-http-post-size: -1B
    threads:
      io: 8
      worker: 256
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
    #   buffers-per-region: 1024 # 这个参数不需要写了
    # 是否分配的直接内存
    direct-buffers: true

spring:
  application:
    name: december
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  servlet:
    multipart:
      enabled: true # 是否支持多部分上传。
      maxFileSize: 10MB # 最大支持文件上传的大小
      maxRequestSize: 100MB # 支持请求最大文件上传的大小
  profiles:
    active: dev
#  ####################################
#  ############kafka配置#################
#  ####################################
#  kafka:
#    bootstrap-servers: 127.0.0.1:9092
#    producer:
#      # 发生错误后，消息重发的次数。
#      retries: 0
#      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
#      batch-size: 16384
#      # 设置生产者内存缓冲区的大小。
#      buffer-memory: 33554432
#      # 键的序列化方式
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      # 值的序列化方式
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
#      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
#      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
#      acks: 1
#    consumer:
#      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
#      auto-commit-interval: 1S
#      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
#      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
#      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
#      auto-offset-reset: earliest
#      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
#      enable-auto-commit: false
#      # 键的反序列化方式
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      # 值的反序列化方式
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    listener:
#      # 在侦听器容器中运行的线程数。
#      concurrency: 5
#      #listner负责ack，每调用一次，就立即commit
#      ack-mode: manual_immediate
#      missing-topics-fatal: false


# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: random-64
  # 是否输出操作日志
  is-log: false
  isPrint: false

# captcha配置
captcha:
  # 验证码有效时间，单位秒
  time: 120
  # 验证码类型，可选值 png、gif、Arithmetic(目前jdk11以上无法使用)，默认值 png
  type: png
  # 验证码图片宽度，单位像素
  width: 115
  # 验证码图片高度，单位像素
  height: 42
  # 验证码字符长度/算数类型是几位数运算，默认是两位
  length: 4
  # 验证码值的类型 1:数字加字母 2:纯数字 3:纯字母
  charType: 2


# mybatis-plus配置
mybatis-plus:
  type-aliases-package: com.yarns.december.entity.*
  mapper-locations: classpath:mapper/*.xml
  configuration:
    jdbc-type-for-null: null
  global-config:
    banner: false